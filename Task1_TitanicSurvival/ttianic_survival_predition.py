# -*- coding: utf-8 -*-
"""Ttianic Survival Predition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tlOTFomtvGI08_oPa7Qv4n5VQFuc9UK3

Importing Dependencies
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection and Processing"""

#load data from csv to pandas DataFrame
titanic_data = pd.read_csv('/content/titanic_train.csv')

#print first 5 rows
titanic_data.head()

#number of rows and column
titanic_data.shape

#getting info about data
titanic_data.info()

#checking missing values in each clm
titanic_data.isnull().sum()

"""Handling Missing Values"""

#remove cabin column as most of data are missing
titanic_data=titanic_data.drop(columns='Cabin',axis=1)  #axis=1 represents column

titanic_data.isnull().sum()

#replace missing value of Age column with mean
titanic_data['Age'].fillna(titanic_data['Age'].mean(),inplace=True) #inplace save the new values to original dataframe

titanic_data.isnull().sum()

#replace missing value of Fare column with mean
titanic_data['Fare'].fillna(titanic_data['Fare'].mean(),inplace=True)

titanic_data.isnull().sum()

"""Analysis of Data"""

#Statistical measures about data
titanic_data.describe()

#finding number of people survived and not survived
titanic_data['Survived'].value_counts()

"""Data Visualization"""

sns.set()

#making a count plot for 'Survived' column
sns.countplot(x=titanic_data['Survived'])

titanic_data['Sex'].value_counts()

#Count plot for 'Sex' column
sns.countplot(x=titanic_data['Sex'])

#number of survivers based on Gender
sns.countplot(x=titanic_data['Sex'],hue=titanic_data['Survived'])

sns.countplot(x=titanic_data['Pclass'],hue=titanic_data['Survived'])

sns.countplot(x=titanic_data['SibSp'],hue=titanic_data['Survived'])

sns.countplot(x=titanic_data['Parch'],hue=titanic_data['Survived'])

"""Encoding categorical columns (Sex, Embarked)"""

titanic_data['Sex'].value_counts()

titanic_data.groupby('Sex')[['Survived']].mean()

titanic_data['Sex'].unique()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

titanic_data['Sex']= le.fit_transform(titanic_data['Sex'])

titanic_data.head()

titanic_data['Sex'],titanic_data['Survived']

sns.countplot(x=titanic_data['Sex'], hue=titanic_data['Survived'])

titanic_data.isna().sum()

X=titanic_data[['Pclass','Sex']]
Y=titanic_data['Survived']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=1)

model = LogisticRegression()
model.fit(X_train,Y_train)

test_prediction = print(model.predict(X_test))

print(Y_test)

import warnings
warnings.filterwarnings("ignore")

result = model.predict([[2,0]])
if(result==0):
  print("Not Survived")
else:
  print("Survived")





import warnings
warnings.filterwarnings("ignore")

result = model.predict([[2,1]])
if(result==0):
  print("Not Survived")
else:
  print("Survived")